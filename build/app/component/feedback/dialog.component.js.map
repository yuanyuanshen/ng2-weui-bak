{"version":3,"sources":["../../src/app/component/feedback/dialog.component.ts"],"names":[],"mappings":"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","file":"dialog.component.js","sourcesContent":["import { Component, Input, Output, HostBinding, EventEmitter, OnChanges } from \"@angular/core\";\r\n\r\n/**\r\n * @typedef {string} Dialog选项样式类型枚举, \"default\"或\"primary\"\r\n */\r\nexport type DialogOptionStyle = \"default\" | \"primary\";\r\n\r\n/**\r\n * Dialog 选项定义\r\n * @property {string}            DialogOption.label 键值\r\n * @property {string}            DialogOption.value 显示值\r\n * @property {DialogOptionStyle} DialogOption.style 选项样式\r\n */\r\nexport interface DialogOption {\r\n  label: string;\r\n  value: string;\r\n  style: DialogOptionStyle;\r\n}\r\n\r\n/**\r\n * WeUI 消息对话框组件(IOS样式)\r\n * @class                                 WxDialogIOSComponent\r\n * @property {Array<DialogOption>}        WxDialogIOSComponent.options  - 输入参数: 选项定义对象数组\r\n * @property {string}                     WxDialogIOSComponent.title    - 输入参数: 标题\r\n * @property {string}                     WxDialogIOSComponent.content  - 输入参数: 内容\r\n * @property {boolean}                    WxDialogIOSComponent.display  - 输入输出参数: 是否显示\r\n * @property {boolean}                    WxDialogIOSComponent.isModel  - 输入参数: 是否模式窗体\r\n * @property {EventEmitter<DialogOption>} WxDialogIOSComponent.doCheck  - 输出参数: 确认选择\r\n * @event                                 WxDialogIOSComponent#display\r\n * @event                                 WxDialogIOSComponent#do-check\r\n */\r\n@Component({\r\n  selector: \"div[wx-dialog-ios]\",\r\n  template: `\r\n    <div *ngIf=\"!isModel\" class=\"weui-mask\" (click)=\"doCancel()\"></div>\r\n    <div *ngIf=\"isModel\" class=\"weui-mask\"></div>\r\n    <div class=\"weui-dialog\">\r\n      <div *ngIf=\"title\" class=\"weui-dialog__hd\">\r\n        <strong class=\"weui-dialog__title\">{{title}}</strong>\r\n      </div>\r\n      <div *ngIf=\"content\" class=\"weui-dialog__bd\">{{content}}</div>\r\n      <div *ngIf=\"options\" class=\"weui-dialog__ft\">\r\n        <a *ngFor=\"let option of options\" style=\"cursor: pointer;\" class=\"weui-dialog__btn\"\r\n          [ngClass]=\"{ 'weui-dialog__btn_default': option.style === 'default', 'weui-dialog__btn_primary': option.style === 'primary' }\"\r\n          (click)=\"doSelect(option)\">{{option.label}}</a>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class WxDialogIOSComponent implements OnChanges {\r\n  @HostBinding(\"style.display\")\r\n  private styles: string = \"none\";\r\n  @Input(\"is-model\")\r\n  private isModel: boolean = true;\r\n  @Input()\r\n  private display: boolean = false;\r\n  @Output()\r\n  private displayChange: EventEmitter<boolean> = new EventEmitter();\r\n  @Input()\r\n  private title: string;\r\n  @Input()\r\n  private content: string;\r\n  @Input()\r\n  private options: Array<DialogOption>;\r\n  @Output(\"do-check\")\r\n  private doCheck: EventEmitter<DialogOption> = new EventEmitter();\r\n\r\n  public ngOnChanges(): void {\r\n    if (this.display) {\r\n      this.styles = \"block\";\r\n    } else {\r\n      this.styles = \"none\";\r\n    }\r\n  }\r\n\r\n  private doSelect(option: DialogOption): void {\r\n    this.doCheck.emit(option);\r\n    this.display = false;\r\n    this.displayChange.emit(this.display);\r\n  }\r\n\r\n  private doCancel(): void {\r\n    this.doCheck.emit(null);\r\n    this.display = false;\r\n    this.displayChange.emit(this.display);\r\n  }\r\n}\r\n\r\n/**\r\n * WeUI 消息对话框组件(Android样式)\r\n * @class                                 WxDialogAndroidComponent\r\n * @property {Array<DialogOption>}        WxDialogAndroidComponent.options  - 输入参数: 选项定义对象数组\r\n * @property {string}                     WxDialogAndroidComponent.title    - 输入参数: 标题\r\n * @property {string}                     WxDialogAndroidComponent.content  - 输入参数: 内容\r\n * @property {boolean}                    WxDialogAndroidComponent.display  - 输入输出参数: 是否显示\r\n * @property {boolean}                    WxDialogAndroidComponent.isModel  - 输入参数: 是否模式窗体\r\n * @property {EventEmitter<DialogOption>} WxDialogAndroidComponent.doCheck  - 输出参数: 确认选择\r\n * @event                                 WxDialogAndroidComponent#display\r\n * @event                                 WxDialogAndroidComponent#do-check\r\n */\r\n@Component({\r\n  selector: \"div[wx-dialog-android]\",\r\n  template: `\r\n    <div *ngIf=\"!isModel\" class=\"weui-mask\" (click)=\"doCancel()\"></div>\r\n    <div *ngIf=\"isModel\" class=\"weui-mask\"></div>\r\n    <div class=\"weui-dialog weui-skin_android\">\r\n      <div *ngIf=\"title\" class=\"weui-dialog__hd\">\r\n        <strong class=\"weui-dialog__title\">{{title}}</strong>\r\n      </div>\r\n      <div *ngIf=\"content\" class=\"weui-dialog__bd\">{{content}}</div>\r\n      <div *ngIf=\"options\" class=\"weui-dialog__ft\">\r\n        <a *ngFor=\"let option of options\" style=\"cursor: pointer;\" class=\"weui-dialog__btn\"\r\n          [ngClass]=\"{ 'weui-dialog__btn_default': option.style === 'default', 'weui-dialog__btn_primary': option.style === 'primary' }\"\r\n          (click)=\"doSelect(option)\">{{option.label}}</a>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class WxDialogAndroidComponent {\r\n  @HostBinding(\"style.display\")\r\n  private styles: string = \"none\";\r\n  @Input(\"is-model\")\r\n  private isModel: boolean = true;\r\n  @Input()\r\n  private display: boolean = false;\r\n  @Output()\r\n  private displayChange: EventEmitter<boolean> = new EventEmitter();\r\n  @Input()\r\n  private title: string;\r\n  @Input()\r\n  private content: string;\r\n  @Input()\r\n  private options: Array<DialogOption>;\r\n  @Output(\"do-check\")\r\n  private doCheck: EventEmitter<DialogOption> = new EventEmitter();\r\n\r\n  public ngOnChanges(): void {\r\n    if (this.display) {\r\n      this.styles = \"block\";\r\n    } else {\r\n      this.styles = \"none\";\r\n    }\r\n  }\r\n\r\n  private doSelect(option: DialogOption): void {\r\n    this.doCheck.emit(option);\r\n    this.display = false;\r\n    this.displayChange.emit(this.display);\r\n  }\r\n\r\n  private doCancel(): void {\r\n    this.doCheck.emit(null);\r\n    this.display = false;\r\n    this.displayChange.emit(this.display);\r\n  }\r\n}\r\n"]}